// commands/get.js
const axios = require("axios");
const fs = require("fs");
const path = require("path");

const API_BASE = "https://firestats.onrender.com/api";
const API_KEY = "2f25567051a78d2f2b60a261af6babb8cb161bb32e24122eb4e6f21c767f46e0";

module.exports.config = {
  name: "get",
  version: "1.0",
  hasPermission: 0,
  permission: 0,
  credits: "RAHAT",
  usePrefix: true,
  description: "Get FF player profile and outfit image",
  commandCategory: "information",
  usages: "/get <UID>",
  cooldowns: 5
};

module.exports.run = async ({ api, event, args }) => {
  if (args.length < 1) {
    return api.sendMessage("‚ö†Ô∏è Please provide a UID!\n\nüìå Example:\n/get 3721018990", event.threadID, event.messageID);
  }

  const uid = args[0];
  const cacheDir = path.join(__dirname, "cache");
  const profileImagePath = path.join(cacheDir, profile_${uid}.png);
  const outfitImagePath = path.join(cacheDir, outfit_${uid}.png);

  if (!fs.existsSync(cacheDir)) {
    fs.mkdirSync(cacheDir, { recursive: true });
  }

  const waitMsg = await api.sendMessage("üçÅ Wait...", event.threadID, event.messageID);

  try {
  
    const profileRes = await axios.get(${API_BASE}/profileinfo/v1?uid=${uid}&api=${API_KEY});
    const data = profileRes.data;
    if (data.ban_status.status !== 200) throw new Error("Invalid UID or API error");

    const ban = data.ban_status.data;
    const profile = data.profile_info;

    
    const formatted = `
PLAYER INFO

‚îåüö´ BAN STATUS
‚îú‚îÄID: ${ban.id}
‚îú‚îÄBanned: ${ban.is_banned ? "Yes" : "No"}
‚îú‚îÄLast Login: ${new Date(ban.last_login * 1000).toLocaleString()}
‚îú‚îÄNickname: ${ban.nickname}
‚îú‚îÄRegion: ${ban.region}
‚îî‚îÄPeriod: ${ban.period}

‚îåüíÅ‚Äç‚ôÇÔ∏è BASIC INFO
‚îú‚îÄUID: ${profile.basicInfo.accountId}
‚îú‚îÄNickname: ${profile.basicInfo.nickname}
‚îú‚îÄRegion: ${profile.basicInfo.region}
‚îú‚îÄLevel: ${profile.basicInfo.level}
‚îú‚îÄExp: ${profile.basicInfo.exp}
‚îú‚îÄBadge Count: ${profile.basicInfo.badgeCnt}
‚îú‚îÄLiked: ${profile.basicInfo.liked}
‚îú‚îÄCreated At: ${new Date(profile.basicInfo.createAt * 1000).toLocaleString()}
‚îú‚îÄLast Login: ${new Date(profile.basicInfo.lastLoginAt * 1000).toLocaleString()}
‚îú‚îÄBR Rank Points: ${profile.basicInfo.rankingPoints}
‚îî‚îÄCS Rank Points: ${profile.basicInfo.csRankingPoints}

‚îåü´° SOCIAL INFO
‚îú‚îÄGender: ${profile.socialInfo.gender}
‚îú‚îÄLanguage: ${profile.socialInfo.language}
‚îú‚îÄMode Prefer: ${profile.socialInfo.modePrefer}
‚îî‚îÄSignature: ${profile.socialInfo.signature}

‚îåüë®‚Äçüë©‚Äçüëß‚Äçüë¶ GUILD INFO
‚îú‚îÄName: ${profile.clanBasicInfo.clanName}
‚îú‚îÄID: ${profile.clanBasicInfo.clanId}
‚îú‚îÄLevel: ${profile.clanBasicInfo.clanLevel}
‚îî‚îÄMembers: ${profile.clanBasicInfo.memberNum}/${profile.clanBasicInfo.capacity}

‚îåüê∂ PET INFO
‚îú‚îÄID: ${profile.petInfo.id}
‚îú‚îÄLevel: ${profile.petInfo.level}
‚îú‚îÄExp: ${profile.petInfo.exp}
‚îî‚îÄSkin ID: ${profile.petInfo.skinId}
`;

   
    const profileImgRes = await axios.get(${API_BASE}/profileinfo/v1?uid=${uid}&api=${API_KEY}, { responseType: "arraybuffer" });
    fs.writeFileSync(profileImagePath, profileImgRes.data);


    const outfitImgRes = await axios.get(${API_BASE}/outfit/v1?uid=${uid}&api=${API_KEY}, { responseType: "arraybuffer" });
    fs.writeFileSync(outfitImagePath, outfitImgRes.data);

    await api.unsendMessage(waitMsg.messageID);


    return api.sendMessage(
      {
        body: ‚úÖ Profile Generated\nUID: ${uid}\nNickname: ${ban.nickname}\nCreator: Riad,
        attachment: [
          fs.createReadStream(profileImagePath),
          fs.createReadStream(outfitImagePath)
        ]
      },
      event.threadID,
      () => {
        fs.unlinkSync(profileImagePath);
        fs.unlinkSync(outfitImagePath);
      },
      event.messageID
    );
  } catch (err) {
    await api.unsendMessage(waitMsg.messageID);
    return api.sendMessage(‚ùå Error: ${err.message}, event.threadID, event.messageID);
  }
};
